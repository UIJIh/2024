.capitalize() >> 처음대문자, 영원히 바꾸지는 않음
.swapcase()
capitalized format = title()

.strip()
.rstrip()
.lstrip()
.removeprefix()
.find('')  >> list에서 안되고 없으면 -1 반환
.index('')
.count('') >> string & list에서도 가능
https://sxbxn.tistory.com/35
new = [sen.strip() for sen in new if sen.strip()]
/ -> float
//(floor devision) -> int
  >> 근데 float끼리 나누면 float나옴
math.pi * (radius ** 2)
(-b + discriminant**0.5) / (2*a)

all capital letters as a constant
import this

mirrored_part = original_string[::-1]

format(num, 'b') 이진수 / bin(value)
int('0b111100', 2)
'o' 팔진수 octal / oct(num)
int('0o74', 8)
'x' 십육진수 hexadecimal / hex(num) 
int('0x3c', 16)
%= remainder assignment
augumented assignment += *=
round(quotient) >> rounding half to even




print(str(my_list2[0]) + my_list2[2][2][0])
 >> 띄어쓰기 없음 띄어쓰기 할라면 " "

my_list3 * 2
    if isinstance(element, int):
        new.append(element * 2)

.insert(index, value)
del statement >> index 이용해서!! list[idx]
.pop() >>> the last value return
.pop(idx)
.remove(element) >> 첫번째 나타난 element 명시!!

'list' object has no attribute 'find'

.sort() >> 영원히
.sort(reverse=True) >> 알파벳, 영원히
print(sorted(list)) >> 영원히 바꾸지 않음
.reverse() >> 알파벳 아니고 그냥 order 영원히
print(sorted(scores)[::-1])
print(sorted(scores, reverse=True))
.append(list[]넣으면 list가 list 안으로)
.count("apple") >> 숫자 반환
.extend([추가할 elements]) += 할때도 [] 써줘야함!!!!!
sqr += [(i ** 2)]

num = 3382
for id in ids:
    if id == num:
        ids.remove(id)

max(listname)

'ar' in ['Bargain'] >> false

print(spring.append("hello") >> None

피보나치, 새로운거 append

num = list(range(1, 10, 3)) >> list 꼭써야댐

squares = [value**2 for value in range(1, 11)]

def multiplyIndex(l):
    return [i*num for i, num in enumerate(l)]

copy = ori[:] >> 별개임
copy = ori >> 같은거임

튜플은 immutable 불변
튜플, 리스트처럼 접근 [idx] >> 그러나 변화안댐
튜플, 원소하나여도 반드시 컴마! tup(1,)
for tup in tuples: 로 접근
각각 변경은안되지만 아예 튜플변수를 재assign하기!! dim = ~, ..., dim=~
슬라이싱 가능하다!!
리스트처럼 + 로 결합 가능하다
리스트처럼 *로 복제(반복) 가능하다
리스트처럼 del 절대 안댐 immutable
value 3개 return 하는경우

Case-insensitive는 문자의 대 소문자 구분이 없다 .lower()